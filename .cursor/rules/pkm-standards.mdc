---
description: 
globs: 
alwaysApply: true
---
# PKM 规范与时间管理


## 目录结构

PKM系统采用Johnny-Decimal结构，顶层分类遵循5±2原则，确保检索便捷：

| 序号 | 文件夹 | 说明 |
| --- | --- | --- |
| **00‑inbox** | 收集箱，任何新捕获内容先落此处 | |
| **10‑projects** | 有交付物或截止日期的事务 | |
| **20‑areas** | 持续关注/职责域 | |
| **30‑resources** | 可复用参考资料、模板、最佳实践 | |
| **90‑archive** | 已完结或弃置内容，按年份归档 | |
| **99‑system** | 模板、脚本、样式、全局MOC | |

## 文件命名规范

- 文件夹：使用 `XX-job-domain` 格式
- 文件：使用 `XX-中文名.md` 格式
- MOC文件：使用 `00-MOC-主题.md` 格式确保置顶
- 嵌套层级不超过2层（顶层文件夹→子文件夹→文件）

## 元数据规范

新文件必须包含以下YAML前置元数据：

```yaml
---
title: 文档标题
jd_id: J10-YYYYMMDD-HHMM  # Johnny-Decimal ID
created: YYYY-MM-DD HH:MM # 创建时间，使用MCP工具获取
updated: YYYY-MM-DD HH:MM # 更新时间，使用MCP工具获取
type: note                # moc / guide / note ...
status: draft             # draft / active / archived
tags: []                  # 主题检索，见标签系统
---
```

## 标签系统规范

- 顶级命名空间仅4个：`topic/`, `status/`, `action/`, `lang/`
- 使用全小写kebab-case，使用`/`建立层级：`#topic/ai`, `#action/todo`
- 每月清理同义词标签；使用频次<3的标签应考虑删除

## 时间管理规则

在创建或更新文件时，使用MCP时间工具自动获取当前时间：

1. 创建新文件时，`created`和`updated`字段应使用`mcp_time_get_current_time`获取时间
2. 更新文件时，`updated`字段应使用`mcp_time_get_current_time`更新

示例代码：

```typescript
// 获取当前时间
const currentTime = await mcp_time_get_current_time({timezone: "Asia/Shanghai"});
const formattedTime = currentTime.substring(0, 16).replace('T', ' '); // 格式化为 YYYY-MM-DD HH:MM

// 更新元数据
// 对于新文件
frontmatter.created = formattedTime;
frontmatter.updated = formattedTime;

// 对于已有文件
frontmatter.updated = formattedTime;
```

## MOC同步规则

Map of Content (MOC) 文件是知识体系的重要导航工具：

1. 主题MOC：与主题同目录，提供本地索引和快速上下文
2. 全局MOC：位于`99-system/MOC-dashboard.md`，提供总览和仪表盘功能

新建文件或更新主题时，应确保：

1. 将新文件添加到相应的主题MOC中
2. 将新的主题MOC链接到全局MOC中
3. 每周使用Dataview查询未被全局MOC引用的`MOC-*`文件并补充链接

## 知识内化流程

遵循DIKW & SECI循环：
- 数据→信息：剪藏→整理
- 信息→知识：写用法
- 知识→智慧：复盘发布

## 维护指标

定期检查以下指标：
- 孤岛笔记：应≤5%
- 过期项目：应为0

## 常见错误和最佳实践

- 不要在笔记中使用过于复杂的嵌套结构
- 确保每个笔记至少有一个到其他笔记的链接
- 定期清理inbox文件夹，将内容分类到适当的位置
- MOC文件应当是动态的，定期更新，而非静态列表

## 写作指南
1. 需要创建文件写作时，遵循 [write.md](mdc:prompt/write.md)
2. 需要重写或者改写时，遵循 [rewrite.md](mdc:prompt/rewrite.md)

## 时间
不要自己生成时间，始终使用 `get_current_time` 获取时间

## README
1. 不遵循以上规则，遵循github社区的最佳实践（个人知识库向）
2. 增加各自领域的入口 MOC







